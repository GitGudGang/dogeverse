
#Configure Hibernate in Spring to automatically generate a MySQL schema:
#***********************************************************************
#Properties:
#create - create new schema, drop existing
#create-drop - create schema and drop when SessionFactory is closed (app stops)
#update - update the schema if there are any changes in the entity mappings, existing data persists
#validate - throws exception if tables or columns don't exist
spring.jpa.hibernate.ddl-auto=create

# Environment variables:
#***********************


#Environment variables for localhost in IntelliJ:
#************************************************
#JDBC_DATABASE_URL=jdbc:mysql://localhost:3306/database-name;JDBC_USERNAME=xxx;JDBC_PASSWORD=yyy

#better error messages:
#**********************
spring.jpa.show-sql=true

#Hikari settings:
#****************
#spring.datasource.hikari.maxLifetime property must be lower than the database's wait_timeout
#1 minutes wait time:
spring.datasource.hikari.maxLifeTime : 60000
spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=4
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.idle-timeout=30000